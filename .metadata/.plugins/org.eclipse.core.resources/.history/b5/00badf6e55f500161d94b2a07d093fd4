package countAndSay;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/*
 * 38. Count and Say
 * The count-and-say sequence is the sequence of integers beginning as follows:
1, 11, 21, 1211, 111221, ...

1 is read off as "one 1" or 11.
11 is read off as "two 1s" or 21.
21 is read off as "one 2, then one 1" or 1211.
Given an integer n, generate the nth sequence.

Note: The sequence of integers will be represented as a string.
 * 
 */
public class CountAndSaySolution {

	public static void main(String[] args) 
	{
		// TODO Auto-generated method stub
		int n=123;
		System.out.println(countAndSay(n));
	}
	
	public static String countAndSay(int n) 
	{
		String[] nums = Integer.toString(n).split("");
		int[] numsInt = new int[nums.length];
		
		Set<Integer> mySet = new HashSet<Integer>();
		Map<Integer,Integer> maps = new HashMap<Integer,Integer>();
		for(int i = 0;i<nums.length; i++)
		{
			numsInt[i] = Integer.parseInt(nums[i]);
		}
		
		for(int e:numsInt)
		{
			mySet.add(e);
		}
		// this is to make sure we can know how many different numbers in the array.
		
		for(int e:numsInt)
		{
			if(mySet.contains(e))
			{
				int count = maps.get(e);
				maps.put(e, count++);
			}
		}
		
		StringBuilder ans = new StringBuilder();
		for(int val: mySet)
		{
			ans.append(maps.get(val).toString()+Integer.toString(val));
		}
		
		return ans.toString();
    }

}
