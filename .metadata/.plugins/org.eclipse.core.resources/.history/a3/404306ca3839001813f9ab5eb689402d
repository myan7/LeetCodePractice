/*
 * 557. Reverse Words in a String III
 * Given a string, 
 * you need to reverse the order of characters in each word within a sentence 
 * while still preserving whitespace and initial word order.

Example 1:
Input: "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Note: In the string, 
each word is separated by single space 
and there will not be any extra space in the string.
 * */

package reversewordsinstring;

public class ReverseWordsInStringIII {

	public static void main(String[] args) 
	{
		// TODO Auto-generated method stub
		
		String s = "Let's take LeetCode contest";
		System.out.println(reverseWords(s));
	}
	
//	24 ms for 30 cases
	public static String reverseWords(String s) 
	{
		String str = new String();
		StringBuffer sb = new StringBuffer(s);
		if(s.length()<0)
		{
			str = null;
		}else if(s.length()==0)
		{
			str = "";
		}else
		{
			String[] strArr = sb.reverse().toString().split(" ");
			StringBuffer ansb = new StringBuffer();
			for(int i = strArr.length-1;i>=0;i--)
			{
				if(i>0)
				{
					ansb.append(strArr[i]+" ");
				}else
					ansb.append(strArr[i]);
			}
			str = ansb.toString();
		}
		return str;
    }

}
