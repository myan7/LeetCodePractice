package lc.q560.SubarraySumEqualsK;
/*
 * 560. Subarray Sum Equals K
 * Medium 
 * Given an array of integers and an integer k, 
 * you need to find the total number of continuous subarrays whose sum equals to k.

Example 1:
Input:nums = [1,1,1], k = 2
Output: 2

Note:
The length of the array is in range [1, 20,000].
The range of numbers in the array is [-1000, 1000] and the range of the integer k is [-1e7, 1e7].
 */

public class SubarraySumEqualsK {

	public static void main(String[] args) 
	{
		int[] tc1 = {1,1,1};
		int[] tc2 = {};
		System.out.println(subarraySum(tc2, 2));
	}
	
	public static int subarraySum(int[] nums, int k) 
	{
		int len = nums.length;
		int end = 0;
		int sum = 0;
		int count = 0;
		for(int i = 0;i<len;)
		{
			end = i;
			while(end<len)
			{
				sum += nums[end++];
				if(sum == k)
				{
					i = end;
					count++;
					sum =0;
				}
			}
		}
		return count;
	}

}
