package lc.q110.BalancedBinaryTree;

/*
 * 110. Balanced Binary Tree
 * Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as a binary tree 
in which the depth of the two subtrees of every node never differ by more than 1.
 * 
 * 
 */
public class BalancedBinaryTree {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

//	68.33%
	public static boolean isBalanced(TreeNode root) 
	{
//		if(root==null){
//	        return true;
//	    }
	    return getHeight(root)!=-1;
    }
	
	public static int getHeight(TreeNode node)
	{
		if(node==null)
		{
	        return 0;
	    }
		
	    int lH=getHeight(node.left);
	    
	    if(lH==-1){
	        return -1;
	    }
	    
	    int rH=getHeight(node.right);
	    
	    if(rH==-1){
	        return -1;
	    }
	    
	    if(lH-rH<-1 || lH-rH>1){
	        return -1;
	    }
	    return Math.max(lH,rH)+1;
	}
}
