package lc.q164.MaximumGap;
/*
 * 164. Maximum Gap
 * hard
 * Given an unsorted array, 
 * find the maximum difference between the successive elements in its sorted form.

Try to solve it in linear time/space.

Return 0 if the array contains less than 2 elements.

You may assume all elements in the array are non-negative integers 
and fit in the 32-bit signed integer range.

Credits:
 * 
 * 
 */

public class MaximumGap {

	public static void main(String[] args) {
		int[] tc1 = {10,3,7,1,5,4,2};
		int[] tc2 = {2,9999999};
		System.out.println(maximumGap(tc1));
	}
	
	public static int maximumGap(int[] nums) 
	{
      if(nums.length<2)
    	  return 0;
      int max = Integer.MIN_VALUE;
      for(int e:nums)
      {
    	  if(e>max)
    		  max = e;
      }
      int[] array = new int[max];
      for(int i = 0;i<nums.length;i++)
      {
    	  array[nums[i]-1] = nums[i]; 
      }
      int count = 0;
      int res = 0;
      for(int e: array)
      {
    	  if(e==0)
    	  {
    		  count++;
    		  if(count>res)
    			  res = count;
    	  }
    	  else
    	  {
    		  count = 0;
    	  }
      }
      return res+1;
    }
}
